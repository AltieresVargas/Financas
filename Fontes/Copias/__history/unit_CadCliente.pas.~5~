unit unit_CadCliente;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ComCtrls, Vcl.StdCtrls, Vcl.Mask,
  Vcl.ExtCtrls, Data.DB, Vcl.Grids, Vcl.DBGrids, unit_Dados;

type
  Tform_CadCliente = class(TForm)
    pnl_PesqCliente: TPanel;
    btn_Deletar: TButton;
    btn_Limpar: TButton;
    edt_CompEnd: TLabeledEdit;
    edt_Telefone: TLabeledEdit;
    edt_Cep: TLabeledEdit;
    edt_Endereco: TLabeledEdit;
    edt_NumEnd: TLabeledEdit;
    edt_Cidade: TLabeledEdit;
    edt_UF: TLabeledEdit;
    edt_Bairro: TLabeledEdit;
    dt_DataNascimento: TDateTimePicker;
    Label1: TLabel;
    edt_Obs: TEdit;
    StaticText1: TStaticText;
    btn_Incluir: TButton;
    pnl_Grid: TPanel;
    Panel2: TPanel;
    Label3: TLabel;
    dbg_Clientes: TDBGrid;
    lb_SaldoAtual: TLabeledEdit;
    db_Clientes: TDataSource;
    btn_Pesquisar: TButton;
    edt_ConsCPF: TEdit;
    edt_NomeCliente: TEdit;
    StaticText2: TStaticText;
    StaticText3: TStaticText;
    Label15: TLabel;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure dbg_ClientesKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure btn_DeletarClick(Sender: TObject);
    procedure btn_PesquisarClick(Sender: TObject);
    procedure btn_IncluirClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  form_CadCliente: Tform_CadCliente;

implementation
uses
  unit_Funcoes;
{$R *.dfm}

procedure Tform_CadCliente.btn_DeletarClick(Sender: TObject);
begin

    if( NOT (dbg_Clientes.DataSource.DataSet.IsEmpty)) then
    begin
        form_dados.RegistroFinancas.prc_deleta_item(dbg_Clientes.DataSource.DataSet.FieldByName('id_cliente').AsInteger);
        db_Clientes.DataSet := form_dados.Cliente.fnc_Cosulta('');
    end;

end;

procedure Tform_CadCliente.btn_IncluirClick(Sender: TObject);
var
   Erro, InsertOuUpdate : string;
begin
     InsertOuUpdate := btn_Incluir.Caption;

    if (edt_ConsCPF.Text = '') or (edt_NomeCliente.Text = '') then
      begin

        if (edt_ConsCPF.Text <> '') then
          begin
            edt_ConsCPF.SetFocus;
          end
         else
            edt_NomeCliente.SetFocus;
      end
    else
      begin

          form_Dados.Cliente.str_nomecliente  :=  edt_NomeCliente.Text;
      //    form_Dados.Cliente.dt_nascimento    :=  StringToDate(FormatDateTime('yyyy-mm-dd',dt_DataNascimento.DateTime));
       //   form_Dados.Cliente.dt_alterado      :=  FormatDateTime('yyyy-mm-dd',Now());
          form_Dados.Cliente.str_cpf          :=  edt_ConsCPF.Text;
       //   form_Dados.Cliente.dt_cadastro      :=  FormatDateTime('yyyy-mm-dd',Now());
          form_Dados.Cliente.str_endereco     :=  edt_Endereco.Text;
          form_Dados.Cliente.str_num          :=  edt_NumEnd.Text;
          form_Dados.Cliente.str_complemento  :=  edt_CompEnd.Text;
          form_Dados.Cliente.str_cep          :=  edt_Cep.Text;
          form_Dados.Cliente.str_bairro       :=  edt_Bairro.Text;
          form_Dados.Cliente.str_cidade       :=  edt_Cidade.Text;
          form_Dados.Cliente.str_uf           :=  edt_UF.Text;
          form_Dados.Cliente.str_telefone     :=  edt_Telefone.Text;
          form_Dados.Cliente.str_obs          :=  edt_Obs.Text;


        if form_dados.Cliente.fnc_InserirAlterar( InsertOuUpdate , Erro) then
         begin
          frc_criar_msg('INSERINDO DADOS',
                'CADASTRAR NOVO CLIENTE',
                'Conexão com o Banco de Dados, Realizado com SUCESSO ' +
                ' O Sistema deve ser Reiniciado! ',
                ExtractFilePath(Application.ExeName) +'\icones\success_128.bmp',
                'OK');

            db_Clientes.DataSet := form_dados.Cliente.fnc_Cosulta('');

          end else
             begin
                frc_criar_msg('INCERINDO DADOS',
                'ERRO AO CADASTRAR NOVO CLIENTE',
                'Não foi possível cadastrar o Cliente, possíveis causas: ' +
                Erro ,
                ExtractFilePath(Application.ExeName) +'\icones\error_128.bmp',
                'OK');

                db_Clientes.DataSet := form_dados.Cliente.fnc_Cosulta('');

                edt_ConsCPF.SetFocus;
            end;
    end;

end;

procedure Tform_CadCliente.btn_PesquisarClick(Sender: TObject);
begin
    if (edt_ConsCPF.Text = '') and (edt_NomeCliente.Text = '') then
      begin
        db_Clientes.DataSet := form_dados.Cliente.fnc_Cosulta('');
      end
    else
    begin
         if (edt_ConsCPF.Text <> '') then
          begin
            db_Clientes.DataSet := form_dados.Cliente.fnc_Cosulta(edt_ConsCPF.Text);
          end
         else
            db_Clientes.DataSet := form_dados.Cliente.fnc_Cosulta(edt_NomeCliente.Text);
    end;
end;

procedure Tform_CadCliente.dbg_ClientesKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
    if( NOT (dbg_Clientes.DataSource.DataSet.IsEmpty)) AND (Key = VK_DELETE) then
         btn_DeletarClick(sender);
end;

procedure Tform_CadCliente.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Action := caFree;
end;


procedure Tform_CadCliente.FormShow(Sender: TObject);
begin
   db_Clientes.DataSet := form_dados.Cliente.fnc_Cosulta('');
end;

end.
